- name: "Set default vault force define for '{{ item.path | basename }}'"
  set_fact:
    _item_vault_force_define: ""

- name: "Set vault force define for '{{ item.path | basename }}' to {{ item.force }}"
  set_fact:
    _item_vault_force_define: "-Dvault.force={{ item.force }}"
  when: item.force is defined

- name: "Deploy AEM package: {{ item.path | basename }}"
  shell: >
    {{ conga_maven_cmd }} {{ conga_packages_plugin }}:install
    -Dvault.serviceURL={{ aem_packages_service_url }}
    -Dvault.file={{ item.path }}
    -Dvault.userId={{ aem_admin_user }}
    -Dvault.password={{ aem_admin_password }}
    -Dvault.delayAfterInstallSec={{ item.delayAfterInstallSec | default('0') }}
    {{ _item_vault_force_define }}
    -Dvault.recursive={{ item.recursive | default('true') }}
  args:
    chdir: "{{ conga_config_path }}"
  delegate_to: "{{ conga_host }}"
  become: false
  register: _mvn_result
  changed_when: _mvn_result.stdout is defined and conga_packages_changed_output in _mvn_result.stdout
  #failed_when: "'BUILD FAILURE' in _mvn_result.stderr"

- name: Fail if Maven stdout is undefined.
  fail:
    msg: "{{ _mvn_result }}"
  when: _mvn_result.stdout is undefined

  # Restart if the package has actually been installed and it has been declared as necessary and
  # allow overriding the requiresRestart property from the package metadata in the CONGA configuration
- name: Restart AEM if required by package metadata.
  command: /bin/true
  notify: restart aem
  when: (conga_packages_changed_output in _mvn_result.stdout) and
        (item.requiresRestart |
         default(item.aemContentPackageProperties.requiresRestart is defined and
         item.aemContentPackageProperties.requiresRestart | bool))

- name: Flush pending (restart) handlers before installation of next package.
  meta: flush_handlers
